{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductsService = /*#__PURE__*/(() => {\n  class ProductsService {\n    constructor(http) {\n      this.http = http;\n      this.Product = {};\n      this.URI = 'http://localhost:3945/api';\n    }\n    getProducts() {\n      return this.http.get(`${this.URI}/products`);\n    }\n    getProduct(id) {\n      return this.http.get(`${this.URI}/product/${id}`);\n    }\n    addToCart(product) {\n      const HttpOptions = {\n        headers: new HttpHeaders({\n          'Authorization': 'Bearer' + localStorage.getItem(\"token\"),\n          'Accept': 'multipart/form-data'\n        })\n      };\n      return this.http.put(`${this.URI}/product/${product._id}`, product);\n    }\n    filterProducts(products, query) {\n      // Lógica de filtrado aquí\n      // Puedes utilizar el mismo código del Pipe de Filtro si lo deseas\n      if (!products || !query) {\n        return products;\n      }\n      const lowerQuery = query.toLowerCase();\n      return products.filter(product => product.title.toLowerCase().includes(lowerQuery) || product.description.toLowerCase().includes(lowerQuery)\n      // Puedes agregar más campos según tus necesidades\n      );\n    }\n    getOriginalProducts() {\n      return this.http.get(`${this.URI}/products`);\n    }\n    buyProduct(_id) {\n      const HttpOptions = {\n        headers: new HttpHeaders({\n          'Authorization': 'Bearer' + localStorage.getItem(\"token\"),\n          'Accept': 'multipart/form-data'\n        })\n      };\n      return this.http.post(`${this.URI}/product/${_id}`, HttpOptions);\n    }\n    saveProduct(title, desctiption, code, category, state, imageURL) {\n      const HttpOptions = {\n        headers: new HttpHeaders({\n          'Authorization': 'Bearer' + localStorage.getItem(\"token\"),\n          'Accept': 'multipart/form-data'\n        })\n      };\n      const fd = new FormData();\n      fd.append('title', title);\n      fd.append('description', desctiption);\n      fd.append('code', code);\n      fd.append('category', category);\n      fd.append('state', state);\n      fd.append('imageURL', imageURL);\n      return this.http.post(`${this.URI}/products/upload/`, fd, HttpOptions);\n    }\n  }\n  ProductsService.ɵfac = function ProductsService_Factory(t) {\n    return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ProductsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductsService,\n    factory: ProductsService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductsService;\n})();","map":null,"metadata":{},"sourceType":"module"}